{"version":3,"sources":["webpack:///./src/components/editor/propertiesDialog.vue?4a56","webpack:///src/components/editor/propertiesDialog.vue","webpack:///./src/components/editor/propertiesDialog.vue?75c3","webpack:///./src/components/editor/propertiesDialog.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","isVisible","handleClose","on","$event","staticClass","slot","_v","_s","title","type","class","dark","handleCategorySelected","model","value","form","callback","$$v","$set","expression","_l","cat","i","key","_id","name","_e","feature","geometry","staticRenderFns","data","props","Boolean","required","mode","String","Object","creationForm","watch","bool","loadCategories","category","properties","toLowerCase","height","status","categoriesList","categorySelected","computed","$store","state","isDark","methods","categoryData","color","featureType","args","t","availableCategories","cancel","$emit","undefined","component"],"mappings":"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","file":"js/chunk-2d0a5550.0e0d0cc7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-dialog',{attrs:{\"visible\":_vm.isVisible,\"width\":\"20%\",\"top\":\"20vh\",\"append-to-body\":\"\",\"show-close\":true,\"close-on-press-escape\":true,\"close-on-click-modal\":false,\"before-close\":function () { return _vm.handleClose(true); }},on:{\"update:visible\":function($event){_vm.isVisible=$event}}},[_c('h2',{staticClass:\"title-user-variant\",attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\" \"+_vm._s(_vm.title)+\" \")]),_c('el-form',[(_vm.type == 'map')?_c('el-form-item',{attrs:{\"label\":\"Category\"}},[_c('el-select',{staticClass:\"w-fit-full\",class:{ dark: _vm.dark },attrs:{\"placeholder\":\"\",\"clearable\":\"\"},on:{\"change\":_vm.handleCategorySelected},model:{value:(_vm.form.category),callback:function ($$v) {_vm.$set(_vm.form, \"category\", $$v)},expression:\"form.category\"}},_vm._l((_vm.categoriesList),function(cat,i){return _c('el-option',{key:i,staticClass:\"capitalize\",attrs:{\"value\":cat._id,\"label\":cat.name}})}),1)],1):_vm._e(),_c('el-form-item',{attrs:{\"label\":\"Name\"}},[_c('el-input',{model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}})],1),(_vm.feature.geometry && _vm.feature.geometry.type != 'Point')?[_c('el-form-item',{attrs:{\"label\":\"Status\"}},[_c('el-switch',{attrs:{\"active-color\":\"#13ce66\",\"inactive-color\":\"#ff4949\",\"active-text\":\"Active\",\"inactive-text\":\"Inactive\",\"active-value\":\"Active\",\"inactive-value\":\"Inactive\"},model:{value:(_vm.form.status),callback:function ($$v) {_vm.$set(_vm.form, \"status\", $$v)},expression:\"form.status\"}})],1),(_vm.feature.geometry.type == 'Polygon')?_c('el-form-item',{attrs:{\"label\":\"Height (Meters)\"}},[_c('el-input-number',{staticClass:\"w-fit-full\",attrs:{\"controls-position\":\"right\"},model:{value:(_vm.form.height),callback:function ($$v) {_vm.$set(_vm.form, \"height\", $$v)},expression:\"form.height\"}})],1):_vm._e()]:_vm._e()],2),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function () { return _vm.handleClose(false); }}},[_vm._v(\" Save \")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <el-dialog\n    :visible.sync=\"isVisible\"\n    width=\"20%\"\n    top=\"20vh\"\n    append-to-body\n    :show-close=\"true\"\n    :close-on-press-escape=\"true\"\n    :close-on-click-modal=\"false\"\n    :before-close=\"() => handleClose(true)\"\n  >\n    <h2 class=\"title-user-variant\" slot=\"title\">\n      {{ title }}\n    </h2>\n    <el-form>\n      <el-form-item label=\"Category\" v-if=\"type == 'map'\">\n        <el-select\n          v-model=\"form.category\"\n          placeholder\n          class=\"w-fit-full\"\n          :class=\"{ dark }\"\n          clearable\n          @change=\"handleCategorySelected\"\n        >\n          <el-option\n            v-for=\"(cat, i) in categoriesList\"\n            :key=\"i\"\n            :value=\"cat._id\"\n            :label=\"cat.name\"\n            class=\"capitalize\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"Name\">\n        <el-input v-model=\"form.name\" />\n      </el-form-item>\n      <template v-if=\"feature.geometry && feature.geometry.type != 'Point'\">\n        <el-form-item label=\"Status\">\n          <el-switch\n            active-color=\"#13ce66\"\n            inactive-color=\"#ff4949\"\n            active-text=\"Active\"\n            inactive-text=\"Inactive\"\n            active-value=\"Active\"\n            inactive-value=\"Inactive\"\n            v-model=\"form.status\"\n          />\n        </el-form-item>\n        <el-form-item\n          label=\"Height (Meters)\"\n          v-if=\"feature.geometry.type == 'Polygon'\"\n        >\n          <el-input-number\n            class=\"w-fit-full\"\n            controls-position=\"right\"\n            v-model=\"form.height\"\n          />\n        </el-form-item>\n      </template>\n    </el-form>\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button type=\"primary\" @click=\"() => handleClose(false)\">\n        Save\n      </el-button>\n    </span>\n  </el-dialog>\n</template>\n\n<script>\nimport { getCategoriesByType } from '../../helpers'\nimport { categoriesDictionary } from '../userCreationForms/fields/dictionary'\n\nexport default {\n  name: 'PropertiesDialog',\n  data: () => ({\n    form: {},\n    categorySelected: null,\n    predefineColors: [\n      '#ff4500',\n      '#ff8c00',\n      '#ffd700',\n      '#90ee90',\n      '#00ced1',\n      '#1e90ff'\n    ],\n    categoriesList: []\n  }),\n  props: {\n    isVisible: {\n      type: Boolean,\n      required: true\n    },\n    mode: {\n      type: String,\n      required: true\n    },\n    type: {\n      type: String,\n      required: true\n    },\n    feature: {\n      type: Object,\n      required: true\n    },\n    creationForm: {\n      type: Object,\n      required: true\n    }\n  },\n  watch: {\n    isVisible(bool) {\n      if (bool) {\n        const type = this.feature.geometry.type\n        if (this.type == 'map') this.loadCategories()\n        else this.categoriesList = []\n\n        if (this.mode != 'create') {\n          this.form = { ...this.feature.properties }\n          if (\n            this.type == 'map' &&\n            this.form.category &&\n            typeof this.form.category != 'string'\n          ) {\n            this.form.category = this.feature.properties.category._id\n          }\n        } else {\n          switch (type.toLowerCase()) {\n            case 'point':\n              this.form = {\n                name: ''\n              }\n              break\n            case 'polygon':\n              this.form = {\n                name: '',\n                height: 0,\n                status: true\n              }\n              break\n            default:\n              this.form = {\n                name: '',\n                status: true\n              }\n              break\n          }\n        }\n      } else {\n        this.form = {}\n        this.categoriesList = []\n        this.categorySelected = null\n      }\n    }\n  },\n  computed: {\n    title() {\n      let title = ''\n      if (this.mode == 'create') {\n        switch (this.type.toLowerCase()) {\n          case 'cls':\n            title = 'Create CLS properties'\n            break\n          case 'ixps':\n            title = 'Create IXP properties'\n            break\n          default:\n            title = 'Edit segment properties'\n            break\n        }\n      } else if (this.mode == 'edit') {\n        switch (this.type.toLowerCase()) {\n          case 'cls':\n            title = 'Edit CLS properties'\n            break\n          case 'ixps':\n            title = 'Edit IXP properties'\n            break\n          default:\n            title = 'Edit segment properties'\n            break\n        }\n      }\n      return title\n    },\n    dark() {\n      return this.$store.state.isDark\n    }\n  },\n  methods: {\n    handleCategorySelected(id) {\n      if (this.type != 'map') return\n\n      const categoryData = this.categoriesList.filter(t => t._id == id)[0]\n      if (categoryData) {\n        this.categorySelected = {\n          category: categoryData._id,\n          color: categoryData.color,\n          'stroke-width': categoryData['stroke-width'],\n          'stroke-opacity': categoryData['stroke-opacity']\n        }\n\n        if (\n          categoryData['stroke-style'] != 'normal' &&\n          this.feature.geometry.type == 'LineString'\n        ) {\n          this.categorySelected['line-dasharray'] = [0.1, 1.8]\n        }\n      } else {\n        this.categorySelected = null\n        let keys = [\n          'color',\n          'category',\n          'stroke-width',\n          'stroke-opacity',\n          'line-dasharray'\n        ]\n\n        for (let key of keys) {\n          if (this.form[key]) {\n            delete this.form[key]\n          }\n        }\n      }\n    },\n    loadCategories() {\n      const featureType =\n        this.feature && this.feature.geometry && this.feature.geometry.type\n          ? this.feature.geometry.type.toLowerCase()\n          : false\n      let availableCategories = []\n      let args = { t: null, categories: categoriesDictionary.getRaw() }\n\n      if (featureType && categoriesDictionary.getLength() > 0) {\n        switch (featureType) {\n          case 'point':\n            args.t = 'custom points'\n            availableCategories = getCategoriesByType(args)\n            break\n          case 'polygon':\n            args.t = 'custom polygons'\n            availableCategories = getCategoriesByType(args)\n            break\n          default:\n            args.t = 'custom lines'\n            availableCategories = getCategoriesByType(args)\n            break\n        }\n      }\n\n      this.categoriesList = availableCategories\n    },\n    handleClose(cancel) {\n      if (!cancel) {\n        if (!this.form.name || this.form.name == undefined) {\n          this.form.name = this.creationForm.name\n        }\n\n        if (\n          this.feature.geometry.type.toLowerCase() == 'polygon' &&\n          this.form.height == 0\n        ) {\n          this.form.height = 1\n        }\n\n        if (this.type == 'map' && this.categorySelected) {\n          this.form = {\n            ...this.form,\n            ...this.categorySelected\n          }\n        }\n\n        return this.$emit('close', { ...this.form })\n      }\n\n      return this.$emit('close', false)\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./propertiesDialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./propertiesDialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./propertiesDialog.vue?vue&type=template&id=6b45aa1a&\"\nimport script from \"./propertiesDialog.vue?vue&type=script&lang=js&\"\nexport * from \"./propertiesDialog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}